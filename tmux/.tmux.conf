#
# author   : Apple Shan <apple.shan@gmail.com>
# create : 2016-06-21
# modified : 2017-11-03
#

#-- base settings --#
set -g default-terminal "screen-256color"  # use 256 colors
set -g display-time 5000  #提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set -g history-limit 65535  # scrollback buffer n lines
set -g renumber-windows on  # window 0, 1, 2, remove 1, renumber to 0, 1
set -g base-index 1  #窗口的初始序号；默认为0，这里设置为1
set -g pane-base-index 1  # panes index start at 1

#-- bindkeys --#
# use C-a, since it's on the home row and easier to hit than C-b
# prefix key (Ctrl+a)
set -g prefix ^a
unbind ^b
bind a send-prefix

# split window
unbind '"'
bind - splitw -v # vertical split (prefix -)
unbind %
bind | splitw -h # horizontal split (prefix |)

# select pane
bind k selectp -U # above (prefix k)
bind j selectp -D # below (prefix j)
bind h selectp -L # left (prefix h)
bind l selectp -R # right (prefix l)

# resize pane
bind -r ^k resizep -U 10 # upward (prefix Ctrl+k)
bind -r ^j resizep -D 10 # downward (prefix Ctrl+j)
bind -r ^h resizep -L 10 # to the left (prefix Ctrl+h)
bind -r ^l resizep -R 10 # to the right (prefix Ctrl+l)

# swap pane
bind ^u swapp -U # swap with the previous pane (prefix Ctrl+u)
bind ^d swapp -D # swap with the next pane (prefix Ctrl+d)

# misc
bind e lastp  # select the last pane (prefix e)
bind ^e last  # select the last window (prefix Ctrl+e)
bind q killp  # kill pane (prefix q)
bind ^q killw # kill window (prefix Ctrl+q)

# use vi mode
# vi is good  把 Tmux 设为 vi 模式，使其与 Vim 的操作更加接近
setw -g mode-keys vi

# Copy and paste like in vim
# p 换成paste
unbind p
bind p paste-buffer

# copy mode
# bind Escape copy-mode             # enter copy mode (prefix Escape)
# bind ^p pasteb                    # paste buffer (prefix Ctrl+p)
# [ 进入复制，space键开始选择问题  方向键移动，  回车复制  ] 黏贴
bind-key [ copy-mode
bind-key ] paste-buffer
bind -T copy-mode-vi v send -X begin-selection   # select (v)
bind -T copy-mode-vi y send -X copy-pipe "xclip" # copy (y)

# app
bind ! splitw htop                                     # htop (prefix !)
bind m command-prompt "splitw 'exec man %%'"           # man (prefix m)
bind @ command-prompt "splitw 'exec perldoc -t -f %%'" # perl func (prefix @)
bind * command-prompt "splitw 'exec perldoc -t -v %%'" # perl var (prefix *)
bind % command-prompt "splitw 'exec perldoc -t %%'"    # perl doc (prefix %)
bind / command-prompt "splitw 'exec ri %%'"            # ruby doc (prefix /)

#-- statusbar --#
# 每 1 秒更新一次状态栏
set -g status-interval 1
set -g status-keys vi

setw -g automatic-rename off

#-- colorscheme --#
# statusbar
set -g status-justify centre # 窗口列表居中显示
set -g status-style "fg=#b9b9b9,bg=#101010,dim"
# 设置状态栏左侧的内容和颜色
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# set -g status-left "#[fg=Green]#(whoami)#[fg=white]::#[fg=blue]#(hostname -s)#[fg=white]::#[fg=yellow]#(curl ipecho.net/plain;echo)#[fg=Green] <- "
set -g status-left-length 40

# 设置状态栏右侧的内容和颜色
# 15% | 28 Nov 18:15
set -g status-right "| #[fg=cyan]%d %b %R"
set -g status-right-length 80

# window
setw -g window-status-format "#I:#W#F"
setw -g window-status-current-format "#I:#W#F"
setw -g window-status-current-style "fg=#8e8e8e,bg=#101010,bold"

# reload config (prefix r)
bind r source ~/.tmux.conf \; display "Configuration reloaded!"

# 可视化通知
setw -g monitor-activity on
set -g visual-activity on

# 临时最大化面板或恢复面板大小
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# 设置窗口列表的颜色
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# 设置活动窗口的颜色
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# 设置面板和活动面板的颜色
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# 设置命令行或消息的颜色
set -g message-fg white
set -g message-bg black
set -g message-attr bright
