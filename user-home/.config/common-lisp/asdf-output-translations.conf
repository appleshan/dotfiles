;; -*- Mode: Lisp; -*-

(:output-translations
 :inherit-configuration

 ; hello
 ("/Lisp/workspace/hello/" "/Lisp/out/hello/bin/")

 ;lib
 ("/Lisp/workspace/cl-lib/usocket/" "/Lisp/out/cl-lib/usocket/bin/")
 ("/Lisp/workspace/cl-lib/bordeaux-threads/" "/Lisp/out/cl-lib/bordeaux-threads/bin/")
 ("/Lisp/workspace/cl-lib/alexandria/" "/Lisp/out/cl-lib/alexandria/bin/")
 ("/Lisp/workspace/cl-lib/trivial-backtrace/" "/Lisp/out/cl-lib/trivial-backtrace/bin/")
 ("/Lisp/workspace/cl-lib/rfc2388/" "/Lisp/out/cl-lib/rfc2388/bin/")
 ("/Lisp/workspace/cl-lib/md5/" "/Lisp/out/cl-lib/md5/bin/")
 ("/Lisp/workspace/cl-lib/cl-plus-ssl/" "/Lisp/out/cl-lib/cl-plus-ssl/bin/")
 ("/Lisp/workspace/cl-lib/trivial-garbage/" "/Lisp/out/cl-lib/trivial-garbage/bin/")
 ("/Lisp/workspace/cl-lib/flexi-streams/" "/Lisp/out/cl-lib/flexi-streams/bin/")
 ("/Lisp/workspace/cl-lib/trivial-gray-streams/" "/Lisp/out/cl-lib/trivial-gray-streams/bin/")
 ("/Lisp/workspace/cl-lib/cffi/" "/Lisp/out/cl-lib/cffi/bin/")
 ("/Lisp/workspace/cl-lib/babel/" "/Lisp/out/cl-lib/babel/bin/")
 ("/Lisp/workspace/cl-lib/trivial-features/" "/Lisp/out/cl-lib/trivial-features/bin/")
 ("/Lisp/workspace/cl-lib/cl-ppcre/" "/Lisp/out/cl-lib/cl-ppcre/bin/")
 ("/Lisp/workspace/cl-lib/cl-fad/" "/Lisp/out/cl-lib/cl-fad/bin/")
 ("/Lisp/workspace/cl-lib/cl-base64/" "/Lisp/out/cl-lib/cl-base64/bin/")
 ("/Lisp/workspace/cl-lib/chunga/" "/Lisp/out/cl-lib/chunga/bin/")

 ; unit-test
 ;("/Lisp/workspace/unit-test/" "/Lisp/out/unit-test/bin/")

 ; cl-unit-test
 ("/Lisp/workspace/cl-unit-test/" "/Lisp/out/cl-unit-test/bin/")
 
 ; montezuma
 ("/Lisp/workspace/montezuma/" "/Lisp/out/montezuma/bin/")
 
)
