#!/bin/bash

usage() {
  cat <<- ...
NAME

    testHostsLocalIP - Test IP addresses online/offline status from /etc/hosts


SYNOPSIS

    [OPTIONS] testHostsLocalIP


EXAMPLES

    1) Set the IPs list source file 
     "IP_SOURCE='/etc/hosts' testHostsLocalIP"

    2) Use RegExp to find target set of IPs
     "LOCAL_IP_PREFIX='^10\.10\.10\.' testHostsLocalIP"

    3) Print this help
     "testHostsLocalIP --help|help"

    You can combine both options...


AUTHORS

    Copyright (C) 2015 Frantisek Preissler <mail@pida.space>

LICENCE

    Released under MIT licence 
...
    return 0
}


## Print help?
if 2>/dev/null 1>&2 test "$1" = '--help' -o "$1" = 'help'
then
    1>&2 usage
    exit 255
fi

## List of IP addresses to test
IP_SOURCE=${IP_SOURCE:-'/etc/hosts'}

## Prefix mask for determine IP addresses from /etc/hosts
IP_REGEXP=${IP_REGEXP:-"^10\.10\.10\."}

## Get local IP addresses from /etc/hosts
LOCAL_IP_ADDRESSES=`egrep -o "$IP_REGEXP[\.0-9]*" "$IP_SOURCE"`


echo -e "---------------------------------"
echo -e "- PROGRAM: testHostsLocalIP     -"
echo -e "---------------------------------"
echo -e "-                               -"
echo -e "- IP Address		Status  -"
echo -e "- ............................. -"

## Loop in IP list
for value in ${LOCAL_IP_ADDRESSES};
do
    IP_STATUS=`/bin/ping -t 1 -c 1 $value | grep -c ', 0% packet loss'`

    if 2>/dev/null 1>&2 test "x$IP_STATUS" = 'x1'; then 
	echo -e "- $value\t\tOnline  -"
    else
	echo -e "- $value\t\tOffline -"
    fi
done


echo -e "................................."
echo -e "- SCRIPT END                    -" 
echo -e "---------------------------------"

exit 0
