######################################################################
#
#   ██╗██████╗ ██╗    ██╗███╗   ███╗
#   ██║╚════██╗██║    ██║████╗ ████║
#   ██║ █████╔╝██║ █╗ ██║██╔████╔██║
#   ██║ ╚═══██╗██║███╗██║██║╚██╔╝██║
#   ██║██████╔╝╚███╔███╔╝██║ ╚═╝ ██║
#   ╚═╝╚═════╝  ╚══╝╚══╝ ╚═╝     ╚═╝
#
#   Appleshan's i3 config
#   https://github.com/appleshan/dotfiles
#
#   Date    : 11/29/2019
#   Author  : Appleshan
#   Version : v1.1
#
#   依赖:conky feh (可选推荐:xcompmgr freetype-infinality)
#   部分特性可能需要新版本支持，请更新至最新版本或自行修改相应部分
#   更多内容请参考:
#   i3 User’s Guide: http://i3wm.org/docs/userguide.html
#   oh-my-i3 github: https://github.com/ID1258/oh-my-i3.git
#
######################################################################


# => 字体
font pango: Hack, Awesome 12


# => 设定mod键为“微软大旗键”
set $mod  Mod4

# => 设定工作区名 (workspace names)
# icons assigned by `polybar`
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "10"

# => 工作区切换&智能启动（添加智能启动脚本~/bin/st 自动且不重复打开工作区相应程序）
# 自动切换到新打开的窗口(需4.12版本支持)
#focus_on_window_activation focus
# 重复切换到当前工作区时会返回上一个所在工作区，有可能造成工作区错位
#workspace_auto_back_and_forth yes
# 注释部分请依据个人喜好更改并取消注释，且把i3-sensible-terminal替换为常用term
#bindsym $mod+1 workspace $ws1, exec --no-startup-id ~/bin/st i3-sensible-terminal
#bindsym $mod+2 workspace $ws2, exec --no-startup-id ~/bin/st google-chrome
#bindsym $mod+3 workspace $ws3, exec --no-startup-id WizNote > /dev/null 2>&1
#bindsym $mod+4 workspace $ws4, exec --no-startup-id ~/bin/st smplayer
#bindsym $mod+5 workspace $ws5, exec --no-startup-id ~/bin/st thunar
#bindsym $mod+6 workspace $ws6, exec --no-startup-id ~/bin/st virtualbox
#bindsym $mod+7 workspace $ws7
#bindsym $mod+8 workspace $ws8
#bindsym $mod+9 workspace $ws9
#bindsym $mod+0 workspace $ws0

bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0


# => 自定义窗口（支持定义边框类型，窗口布局，大小调整，自动归类工作区等等，多个定义用,隔开）
for_window [class="(?i)thunar"] move container to workspace $ws0, workspace $ws0, layout tabbed

# => 窗口边框类型（边框类型有 <normal(正常)|1pixel|pixel xx(自定义宽度)|none(无边框)|pixel>）
# 默认普通窗口的边框类型
new_window normal
# 默认浮动窗口的边框类型
new_float normal
# 设置窗口边框隐藏
hide_edge_borders both
# 在三种边框类型中切换
bindsym $mod+b border toggle
# change borders
# bindsym $mod+u border none
# bindsym $mod+y border pixel 1
# bindsym $mod+n border normal

# => 新建窗口的分割方向
# split in horizontal orientation
bindsym $mod+Ctrl+h split h;exec notify-send 'tile horizontally'
# split in vertical orientation
bindsym $mod+Ctrl+v split v;exec notify-send 'tile vertically'

# => 移动窗口
# move focused window with cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# move focused window with vi keybindings
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# => 调整窗口大小 (resize window)
mode "Resize" {
        # these bindings trigger as soon as you enter the resize mode

        # pressing 'LEFT' or 'H' will shrink the window’s width.
        # pressing 'RIGHT' or 'L' will grow the window’s width.
        # pressing 'UP' or 'K' will shrink the window’s height.
        # pressing 'DOWN' or 'J' will grow the window’s height.
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt
        bindsym h resize shrink width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "Resize"

# => 关闭窗口
# kill focused window
bindsym mod1+F4 kill

# => 焦点切换
# 焦点跟随鼠标移动
focus_follows_mouse yes
# 焦点切换到父窗口 (focus the parent container)
#bindsym $mod+q focus parent
# 焦点切换回子窗口 (focus the child container)
#bindsym $mod+z focus child
# 焦点切换到浮动窗口 (change focus between tiling / floating windows)
bindsym $mod+space focus mode_toggle


# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# change focus with cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# change focus with vi keybindings
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# => 布局切换 (change container layout <stacked, tabbed, toggle split>)
# 切换到堆叠布局
bindsym $mod+s layout stacking
# 切换到标签布局
bindsym $mod+w layout tabbed
# 切换到平铺布局（竖直/水平）
bindsym $mod+e layout toggle split
# 在所有布局中轮回切换
bindsym $mod+x layout toggle all
# 窗口切换到全屏 (enter fullscreen mode for the focused container)
bindsym $mod+f fullscreen toggle
# 窗口切换到浮动 (toggle tiling / floating)
bindsym $mod+Shift+space floating toggle
# 窗口切换为粘滞 (toggle sticky)
bindsym $mod+Shift+s sticky toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# navigate workspaces next / previous
bindsym $mod+Ctrl+Left workspace prev
bindsym $mod+Ctrl+Right workspace next

# => 移动窗口到另一个工作区

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws0

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws8; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws8; workspace $ws0

# => 暂存窗口（额外的可隐藏浮动窗口，取消浮动还原成普通窗口）
# 转换普通窗口为暂存窗口
bindsym $mod+Shift+minus move scratchpad
# 呼出/隐藏暂存窗口
bindsym $mod+minus scratchpad show


# => i3-gaps

# Set inner/outer gaps
set $default_gaps_inner 8
set $default_gaps_outer 0
gaps inner $default_gaps_inner
gaps outer $default_gaps_outer

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# adjust gaps on-the-fly
# Press $mod+Shift+g to enter the gap mode.
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace)
# or 0 (remove gaps for current workspace).
# If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 1
        bindsym minus gaps inner current minus 1
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 1
        bindsym Shift+minus gaps inner all minus 1
        bindsym Shift+0 gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 1
        bindsym minus gaps outer current minus 1
        bindsym 0 gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 1
        bindsym Shift+minus gaps outer all minus 1
        bindsym Shift+0 gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+g mode "$mode_gaps"


# => startup apps and daemons

# • exec命令
#   • exec 执行命令
#   • --no-startup-id 有些脚本或者程序不支持启动通知，不加命令，鼠标会长时间空转，60秒左右
#   • exec_always 每次重启i3，使用该命令启动的程序都会重新执行一次，不然只在开机时执行一次。

# => 开机自启（根据需要取消相应的注释#）
# 壁纸须先安装feh，并在此指定路径
exec_always --no-startup-id feh --bg-scale "$HOME/.config/i3/wallpaper.jpg"
# 设置透明须先安装 compton
# Start compton for Rofi and window border transparency
exec_always --no-startup-id compton -b --config $HOME/.config/compton.conf &
# 建议另外指定一个脚本来启动通用的开机自启项目
# exec --no-startup-id $HOME/bin/RC
# 总有一些奇葩无法正常用脚本启动
# exec --no-startup-id kuaipan4uk &

# `polybar` replaces `i3bar`
# more info at https://github.com/jaagr/polybar
# configuration in ~/.config/polybar/config.ini
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# => Start Fcitx
exec --no-startup-id export GTK_IM_MODULE=fcitx
exec --no-startup-id export XMODIFIERS="@im=fcitx"
exec --no-startup-id export QT_IM_MODULE=fcitx
exec --no-startup-id export export XIM="fcitx"
exec --no-startup-id export export XIM_PROGRAM="fcitx"
exec --no-startup-id fcitx -d -r

# => Start Network Manager
exec_always --no-startup-id nm-applet

# => Start Bluetooth Manager
exec --no-startup-id blueman-applet

# => Start Clipboard Manager
exec --no-startup-id copyq

# => 屏幕管理
# bar上某些要显示托盘图标（tray icon），须执行 xrandr --output:
exec xrandr --output DP1 --primary --mode 1920x1080 --rate 75.00 --pos 1920x0 --output DP2 --auto --pos 0x0
#exec xrandr --output DP1 --primary --mode 1600x900 --rate 75.00 --pos 1600x0 --output DP2 --auto --pos 0x0

# => 重新载入(reload the configuration file)
#（更改配置文件后只须重载即可生效，不包含自启部分）
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# => Start rofi (a program launcher)
bindsym $mod+Ctrl+d --release exec "killall rofi; exec notify-send 'Restart rofi'"
bindsym $mod+Tab     exec --no-startup-id rofi -show window
bindsym $mod+d       exec --no-startup-id rofi -show drun
bindsym $mod+Shift+d exec --no-startup-id rofi -show run
bindsym $mod+Shift+b exec --no-startup-id rofi -show "clipboard:greenclip print" -lines 9
bindsym $mod+Shift+p exec $HOME/.config/rofi/scripts/powermenu.sh
bindsym Ctrl+F7           exec $HOME/.config/rofi/scripts/xrandrmenu.sh
bindsym Ctrl+F8           exec $HOME/.config/rofi/scripts/i3layoutmenu.sh
bindsym Ctrl+F9           exec $HOME/.config/rofi/scripts/rofi-wifi-menu-plus-plus/rofi_wifi_menu.sh

# => 快捷启动
# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
#bindsym $mod+r      exec --no-startup-id dmenu_run -b -fn 'Monaco-12' -nb '#333333' -nf '#FFFFFF' -sb '#111111' -sf '#3399FF'
# start file manager
bindsym $mod+F3 exec --no-startup-id pcmanfm # thunar
# bindsym $mod+F3 exec --no-startup-id ranger
bindsym $mod+Shift+F3 exec --no-startup-id gksu pcmanfm # thunar
# start browser
bindsym $mod+F2 exec google-chrome
# 截图应用
bindsym Print exec --no-startup-id flameshot gui --delay 200
bindsym $mod+Shift+Print exec flameshot config

# => 多屏切换
# New mode for switching monitor modes
set $monitorMode "monitor s=single, d=dual-screen"
bindsym $mod+Shift+m mode $monitorMode
mode $monitorMode {
  bindsym s exec "~/.config/i3/screenlayout/single"
  bindsym d exec "~/.config/i3/screenlayout/dual-screen"
  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# launch categorized menu
bindsym $mod+z exec --no-startup-id morc_menu
bindsym $mod+Ctrl+b exec urxvt -e 'bmenu'

# bindsym $mod+F1 exec xdg-open /usr/share/doc/manjaro/i3_help.pdf
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# => Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# => sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later!
#exec --no-startup-id volumeicon
bindsym $mod+Ctrl+m exec urxvt -e 'alsamixer'


# enable syntax highlighting in vim/neovim. must have the i3 plugin!
# get it at https://github.com/PotatoesMaster/i3-vim-syntax
# vim:filetype=i3
